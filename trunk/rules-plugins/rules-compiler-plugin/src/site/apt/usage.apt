~~
~~ $Id: usage.apt 499 2010-05-25 07:37:16Z rlangbehn $
~~
~~ Copyright 2008, The Rules Framework Development Team, and individual
~~ contributors as indicated by the @authors tag. See the copyright.txt
~~ in the distribution for a full listing of individual contributors.
~~
~~ Licensed under the Apache License, Version 2.0 (the "License");
~~ you may not use this file except in compliance with the License.
~~ You may obtain a copy of the License at
~~
~~     http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing, software
~~ distributed under the License is distributed on an "AS IS" BASIS,
~~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~~ See the License for the specific language governing permissions and
~~ limitations under the License.
~~
~~ Version: $Revision: 499 $ $Date: 2010-05-25 09:37:16 +0200 (Di, 25 Mai 2010) $
~~ Author:  Rainer Langbehn, rlangbehn@users.sourceforge.net
~~

Maven 2 Rules Compiler Plugin: Usage

* Compiling Your Rules Sources

  The goals for the Rules Compiler Plugin are bound to their respective phases
  in the build lifecycle. So to compile your rules sources, you only need to
  tell maven which lifecycle to execute. The following will compile your rules
  sources:

+-----
mvn compile
+-----

  To compile your test rules sources, you'll do:

+-----
mvn test-compile
+-----

  The above command will execute both <<<rules-compiler:compile>>> and
  <<<rules-compiler:test-compile>>> since the compile phase happens a
  few phases before the test-compile phase.

* Configuring Your Rules Compiler Plugin

  Since the Rules Compiler Plugin executes automatically during their phases,
  you don't have to put <<<executions>>> unlike the other plugins.

+-----
<project>
  ...
  <build>
    <plugins>
      <plugin>
        <groupId>net.sourceforge.rules.plugins</groupId>
        <artifactId>rules-compiler-plugin</artifactId>
        <configuration>
          <!-- put your configurations here -->
        </configuration>
      </plugin>
    </plugins>
  </build>
  ...
</project>
+-----
